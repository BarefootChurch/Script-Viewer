{"version":3,"sources":["components/typeSelector.js","utilities/api-auth.js","utilities/pco.js","components/planSelector.js","components/headerRow.js","components/itemRow.js","components/plan.js","registerServiceWorker.js","index.js"],"names":["PlanSelector","react_default","a","createElement","className","Link","to","auth","myFetch","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","url","_ref2","data","wrap","_context","prev","next","fetch","method","headers","Authorization","concat","btoa","then","r","json","sent","abrupt","stop","this","_x","apply","arguments","PCO","baseUrl","getPlans","serviceType","limit","length","undefined","params","getFuturePlans","getPlan","_getPlan","_callee2","planId","plan","planData","planNotesData","versionNote","_context2","planTitle","attributes","title","planDates","dates","filter","note","category_name","planVersion","content","_x2","_x3","getPlanItems","_getPlanItems","_callee3","itemsData","items","_context3","map","itemData","description","details","html_details","id","key","key_name","notes","position","service_position","type","item_type","_x4","getItemNotes","_getItemNotes","_callee4","item","itemNotes","_context4","_x5","_x6","calculateTimes","elapsedTime","reverse","clock","state","plans","style","marginTop","componentWillMount","_this","props","match","value","setState","render","Component","HeaderRow","colSpan","secToTime","sec","Date","toISOString","substr","ItemRow","_this2","Vocals","textAlign","dangerouslySetInnerHTML","__html","planTemplate","col","html","noteTitle","Source","reduce","o","c","planTemplates","default","audio","video","lighting","stage","Plan","planItems","t0","t1","call","objectSpread","componentWillReceiveProps","newProps","version","headerRow","itemRow","templateLinks","keys","template","NavLink","activeClassName","exact","width","toUpperCase","Fragment","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","BrowserRouter","Switch","Route","path","component","TypeSelector","document","getElementById","URL","process","origin","addEventListener","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.50f6b756.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PlanSelector = () => (\n  <div className=\"page\">\n    <div className=\"typeSelector\">\n      <p>To begin, please select a service type.</p>\n      <Link to=\"/Script-Viewer/list/41396\">Morning Experience</Link>\n      <Link to=\"/Script-Viewer/list/804451\">Evening Experience</Link>\n      <Link to=\"/Script-Viewer/list/180063\">Special Event</Link>\n    </div>\n  </div>\n);\n\nexport default PlanSelector;\n","export const auth = {\n  appID: '734b461f55783f9cc466e98c7aedf5f37dcb7b6c1842af90c174d743263f6eae',\n  secret: 'd1f52e1b59a20326e440d21e8adc9c4e91942f1573cb2839b290f6a3c913d425',\n};\n","import { auth } from './api-auth';\n\nconst myFetch = async url => {\n  const { data } = await fetch(url, {\n    method: 'GET',\n    headers: {\n      Authorization: `Basic ${btoa(`${auth.appID}:${auth.secret}`)}`,\n    },\n  }).then(r => r.json());\n  return data;\n};\n\nexport const PCO = {\n  baseUrl: 'https://api.planningcenteronline.com/services/v2',\n\n  getPlans: (serviceType, limit = 5, params = '') => {\n    const url = `${PCO.baseUrl}/service_types/${serviceType}/plans?per_page=${limit}&${params}`;\n    return myFetch(url);\n  },\n\n  getFuturePlans: (serviceType, limit = 5) => PCO.getPlans(serviceType, limit, 'filter=future'),\n\n  getPlan: async (serviceType, planId) => {\n    const plan = { serviceType, planId };\n    const url = `${PCO.baseUrl}/service_types/${plan.serviceType}/plans/${plan.planId}`;\n\n    const planData = await myFetch(url);\n    plan.planTitle = planData.attributes.title;\n    plan.planDates = planData.attributes.dates;\n\n    const planNotesData = await myFetch(`${url}/notes`);\n    const versionNote = planNotesData.filter(\n      note => note.attributes.category_name === 'Information'\n    );\n    plan.planVersion = versionNote[0].attributes.content || 'NONE';\n\n    return plan;\n  },\n\n  getPlanItems: async plan => {\n    const url = `${PCO.baseUrl}/service_types/${plan.serviceType}/plans/${\n      plan.planId\n    }/items?per_page=100`;\n\n    const itemsData = await myFetch(url);\n\n    const items = itemsData.map(itemData => {\n      const item = {\n        description: itemData.attributes.description,\n        details: itemData.attributes.html_details,\n        id: itemData.id,\n        key: itemData.attributes.key_name,\n        length: itemData.attributes.length,\n        notes: {},\n        position: itemData.attributes.service_position,\n        title: itemData.attributes.title,\n        type: itemData.attributes.item_type,\n      };\n      return item;\n    });\n    return items;\n  },\n\n  getItemNotes: async (plan, item) => {\n    const url = `${PCO.baseUrl}/service_types/${plan.serviceType}/plans/${plan.planId}/items/${\n      item.id\n    }/item_notes`;\n\n    const itemNotes = {};\n    const itemNotesData = await myFetch(url);\n\n    itemNotesData.map(note => {\n      itemNotes[note.attributes.category_name] = note.attributes.content;\n      return null;\n    });\n    return itemNotes;\n  },\n\n  calculateTimes: items => {\n    let elapsedTime = 0;\n    return items\n      .reverse()\n      .map(item => {\n        if (item.type === 'header') elapsedTime = 0;\n        elapsedTime += item.length;\n        item.clock = item.length > 0 ? elapsedTime : '';\n        return item;\n      })\n      .reverse();\n  },\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { PCO } from '../utilities/pco';\n\nclass PlanSelector extends Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n  };\n\n  state = {\n    plans: <p style={{ marginTop: 0 }}>loading...</p>,\n  };\n\n  componentWillMount = async () => {\n    const planData = await PCO.getFuturePlans(this.props.match.params.serviceType, 6);\n    const plans = planData.map(plan => (\n      <Link\n        key={plan.id}\n        value={plan.id}\n        to={`/Script-Viewer/plan/${this.props.match.params.serviceType}/${plan.id}`}\n      >\n        {plan.attributes.dates}\n      </Link>\n    ));\n    this.setState({ plans });\n  };\n\n  render = () => (\n    <div className=\"page\">\n      <div className=\"planSelector\">\n        <p>Please select a plan.</p>\n        {this.state.plans}\n      </div>\n    </div>\n  );\n}\n\nexport default PlanSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst HeaderRow = props => (\n  <tr>\n    <td className=\"header\" colSpan=\"2\" />\n    <td className=\"header\">{props.item.title}</td>\n    <td className=\"header\" colSpan=\"3\" />\n  </tr>\n);\n\nHeaderRow.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n\nexport default HeaderRow;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PCO } from '../utilities/pco';\n\nconst secToTime = sec => new Date(sec * 1000).toISOString().substr(14, 5);\n\nclass ItemRow extends Component {\n  static propTypes = {\n    item: PropTypes.object.isRequired,\n    plan: PropTypes.object.isRequired,\n  };\n  state = { notes: {} };\n\n  async componentWillMount() {\n    this.setState({ notes: await PCO.getItemNotes(this.props.plan, this.props.item) });\n  }\n\n  render() {\n    let description = this.state.notes.Vocals || '';\n    if (this.props.item.details !== null) description += `<hr /> ${this.props.item.details}`;\n    return (\n      <tr>\n        <td>{this.props.item.clock > 0 ? secToTime(this.props.item.clock) : ''}</td>\n        <td>{this.props.item.length > 0 ? secToTime(this.props.item.length) : '--:--'}</td>\n        <td style={{ textAlign: 'left' }}>\n          <b>{this.props.item.title}</b>\n          <br />\n          {/* eslint-disable-next-line react/no-danger */}\n          <span dangerouslySetInnerHTML={{ __html: description }} />\n        </td>\n        {this.props.plan.planTemplate.map(col => {\n          const html = col.notes\n            .map(\n              noteTitle =>\n                noteTitle === 'Source' && this.state.notes.Source\n                  ? `<span class=source>${this.state.notes.Source}</span>`\n                  : this.state.notes[noteTitle]\n            )\n            .reduce((o, c) => `${o ? `${o}<br />` : ''}${c || ''}`);\n          /* eslint-disable-next-line react/no-danger */\n          return <td className=\"note\" key={col.title} dangerouslySetInnerHTML={{ __html: html }} />;\n        })}\n      </tr>\n    );\n  }\n}\n\nexport default ItemRow;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { PCO } from '../utilities/pco';\nimport HeaderRow from './headerRow';\nimport ItemRow from './itemRow';\n\nconst planTemplates = {\n  default: [\n    {\n      title: 'Side Screens',\n      notes: ['Sides'],\n    },\n    {\n      title: 'Center Screen',\n      notes: ['Center'],\n    },\n    {\n      title: 'Other',\n      notes: ['Other', 'Source'],\n    },\n  ],\n  audio: [\n    {\n      title: 'Side Screens',\n      notes: ['Sides'],\n    },\n    {\n      title: 'Audio',\n      notes: ['Audio', 'Source'],\n    },\n  ],\n  video: [\n    {\n      title: 'Side Screens',\n      notes: ['Sides'],\n    },\n    {\n      title: 'Center Screen',\n      notes: ['Center'],\n    },\n    {\n      title: 'Video',\n      notes: ['Video', 'Source'],\n    },\n  ],\n  lighting: [\n    {\n      title: 'Side Screens',\n      notes: ['Sides'],\n    },\n    {\n      title: 'Lighting',\n      notes: ['Lighting'],\n    },\n  ],\n  stage: [\n    {\n      title: 'Stage',\n      notes: ['Stage'],\n    },\n  ],\n};\n\nclass Plan extends Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n  };\n\n  state = {};\n\n  componentWillMount = async () => {\n    const plan = await PCO.getPlan(\n      this.props.match.params.serviceType,\n      this.props.match.params.planId\n    );\n    const planItems = PCO.calculateTimes(await PCO.getPlanItems(plan));\n\n    this.setState({\n      planTemplate: planTemplates[this.props.match.params.type] || planTemplates.default,\n      ...plan,\n      planItems,\n    });\n  };\n\n  componentWillReceiveProps = newProps => {\n    this.setState({\n      planTemplate: planTemplates[newProps.match.params.type] || planTemplates.default,\n    });\n  };\n\n  render = () => {\n    if (this.state.planId == null) return <p>loading...</p>;\n\n    const version =\n      this.state.planVersion === 'NONE'\n        ? '** PLAN IS UNFINALIZED **'\n        : `** INFORMATION ${this.state.planVersion} **`;\n    const title =\n      (this.state.planTitle !== null ? `${this.state.planTitle} - ` : '') + this.state.planDates;\n\n    const items = this.state.planItems.map(item => {\n      if (item.type === 'header') return <HeaderRow item={item} key={item.id} />;\n\n      const plan = {\n        planId: this.state.planId,\n        planTemplate: this.state.planTemplate,\n        serviceType: this.state.serviceType,\n      };\n      return <ItemRow item={item} key={item.id} plan={plan} />;\n    });\n\n    const templateLinks = Object.keys(planTemplates).map(template => (\n      <NavLink\n        activeClassName=\"active\"\n        exact\n        key={template}\n        style={{\n          width: `calc(${100 / Object.keys(planTemplates).length}% - 10px)`,\n        }}\n        to={`/Script-Viewer/plan/${this.props.match.params.serviceType}/${\n          this.props.match.params.planId\n        }${template === 'default' ? '' : `/${template}`}`}\n      >\n        {template[0].toUpperCase() + template.substr(1)}\n      </NavLink>\n    ));\n\n    return (\n      <React.Fragment>\n        <div className=\"page\">\n          <div className=\"templateSelector\">\n            <p>Select the plan template you would like to view.</p>\n            {templateLinks}\n          </div>\n        </div>\n        <div className=\"page\">\n          <header>\n            <small>{version}</small>\n            <br />\n            <b>PRODUCTION SCRIPT: {title}</b>\n          </header>\n          <table>\n            <thead>\n              <tr>\n                <th width=\"5%\">Clock</th>\n                <th width=\"5%\">Time</th>\n                <th width=\"45%\" style={{ textAlign: 'left' }}>\n                  Element\n                </th>\n                {this.state.planTemplate.map(col => (\n                  <th key={col.title} width={`${45 / this.state.planTemplate.length}%`}>\n                    {col.title}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>{items}</tbody>\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  };\n}\n\nexport default Plan;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport TypeSelector from './components/typeSelector';\nimport PlanSelector from './components/planSelector';\nimport Plan from './components/plan';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/Script-Viewer/plan/:serviceType/:planId/:type?\" component={Plan} />\n      <Route path=\"/Script-Viewer/list/:serviceType\" component={PlanSelector} />\n      <Route path=\"/Script-Viewer/\" component={TypeSelector} />\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}